package co

type Style struct {
<% styles.forEach(function (s) { %> <%= s.privateName -%>     StyleFunc
<% }) %>
}

<% styles.forEach(function (s) { %>
func (s *Style) <%= s.name %>(input string) string {
	return s.<%= s.privateName %>(input)
}
<% }) %>

// Create a style utility function with isSupportColor 
func UseStyles(isColorSupported bool) *Style {
	if isColorSupported {
		return &Style{<% styles.forEach(function (s) { %>
				<%= s.privateName %> : build<% if (s.replace) { %>WithReplace<% } %>(<%= s.open %>, <%= s.close %><% if (s.replace) { %>, <%- s.replace %><% } %>),<% }) %>
		}
	} else {
		return &Style{
			<% styles.forEach(function (s) { %><%= s.privateName %>:noop,
				<% }) %>
		}
	}
}

var _styles = CreateStyles();
<% styles.forEach(function (s) { %>
func <%= s.name %>(input string) string {
	return _styles.<%= s.name %>(input)
}
<% }) %>
    